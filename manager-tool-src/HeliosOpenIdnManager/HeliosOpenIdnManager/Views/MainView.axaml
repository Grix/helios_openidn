<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:HeliosOpenIdnManager.ViewModels"
             mc:Ignorable="d" d:DesignWidth="1100" d:DesignHeight="650" MinWidth="1000"
             x:Class="HeliosOpenIdnManager.Views.MainView"
             x:DataType="vm:MainViewModel">
	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:MainViewModel />
	</Design.DataContext>

	<Grid ColumnDefinitions="*,*,*" RowDefinitions="*, 50">
		
		<!-- LIST OF SERVERS -->

		<Grid Grid.RowSpan="2" Background="LightGray" RowDefinitions="Auto, *">
			
			<StackPanel Grid.Row="0" Spacing="10" Margin="15,15,15,0">
				<TextBlock Text="Server List" HorizontalAlignment="Center"/>

				<Button Content="Scan" Background="White" Command="{Binding ScanForServersCommand}" ToolTip.Tip="Click to scan the network for Helios OpenIDN devices."></Button>
			</StackPanel>


			<ScrollViewer Grid.Row="1" Margin="15,10">
				<ListBox ItemsSource="{Binding Servers}" SelectionMode="Single" SelectedIndex="{Binding SelectedServerIndex}">
					<ListBox.ItemTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Title}" VerticalAlignment="Center" Margin="20,0,0,0"></TextBlock>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
			</ScrollViewer>
		</Grid>

		<!-- SELECTED SERVER INFO/CONFIG -->

		<TextBlock Grid.ColumnSpan="2" Grid.Column="1" Text="Configuration" Margin="0,15,0,10" HorizontalAlignment="Center"/>

		<StackPanel Grid.Column="1" Spacing="12" Margin="15,50,15,15">

			<TextBlock Margin="5,0,0,0" Text="{Binding SelectedServerTitle, StringFormat='Selected server: {0}'}" IsVisible="{Binding HasSelectedServer}" />
			<TextBlock Margin="5,0,0,0" Text="{Binding ServicesListString, StringFormat='Connected DACs: {0}'}" MinHeight="90"  IsVisible="{Binding HasSelectedServer}"/>

			<Button Command="{Binding LoadCurrentConfigCommand}" IsVisible="{Binding HasSelectedServer}" Background="MediumSeaGreen" Content=" Load current config " ToolTip.Tip="Fills out the fields above with the existing configuration of the selected server."></Button>
			<Button Command="{Binding LoadDefaultConfigCommand}" Content=" Load default config " ToolTip.Tip="Fills out the fields above with the default configuration."></Button>

			<TextBlock Text="ðŸ›ˆ Help" Background="Transparent" FontSize="25" Margin="0, 20, 0, 0" ToolTip.ShowDelay="0" ToolTip.Tip="To modify the server configuration:
					&#x0a;
					&#x0a;- OFFLINE METHOD
					&#x0a;1. Optionally load the default config with the button above, to use as a starting point.
					&#x0a;2. Change any desired settings to the right.
					&#x0a;3. Using the button at the bottom, export to a file named settings.ini.
					&#x0a;4. Place that file on a USB drive.
					&#x0a;5. Plug the USB drive into the device, and turn power off and back on.
					&#x0a;6. Wait at least a minute for the server to restart.
					&#x0a;
					&#x0a;- ONLINE METHOD
					&#x0a;1. Press 'Scan' in the corner and select a server.
					&#x0a;2. Optionally load a config with the buttons above, to use as a starting point.
					&#x0a;3. Change any desired settings to the right.
					&#x0a;4. Using the buttons below, first save/upload the config, then restart the server.
					&#x0a;6. Wait at least a minute for the server to restart."></TextBlock>
			
			<TextBlock Margin="0, 20, 0, 0" Foreground="Red" TextWrapping="Wrap" IsVisible="{Binding !!ErrorMessage}" Text="{Binding ErrorMessage, StringFormat='Error occured: &#x0a;{0}'}"/>
			
		</StackPanel>

		<Border Padding="15" Grid.Column="2">

			<Grid Margin="0,30,0,5" RowDefinitions="Auto, *">
				<StackPanel Spacing="10">

					<DockPanel Margin="0, 20, 0, 0" Background="#EEEEEE" ToolTip.Tip="Here you can replace the default IDN hostname ('OpenIDN') of the selected server.">
						<TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="New server name:" MinWidth="120"/>
						<TextBox Text="{Binding NewServerName}" Watermark="Unchanged" Margin="10,0,0,0" MinWidth="170"></TextBox>
					</DockPanel>
					<DockPanel>
						<TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="Ethernet IP Address:" MinWidth="140"/>
						<StackPanel>
							<CheckBox Margin="20,0" Content="Auto (DHCP)" IsChecked="{Binding EthernetIsDhcp}"/>
							<TextBox IsVisible="{Binding !EthernetIsDhcp}" Text="{Binding EthernetIpAddress}" Watermark="Unchanged" Margin="10,0,0,0" MinWidth="150" ToolTip.Tip="Here you can enter a static IP Address for the Ethernet port on the selected server. You can use CIDR notation to specify subnet, and you can configure multiple addresses by separating them with a space."></TextBox>
						</StackPanel>
					</DockPanel>
					<TextBlock IsVisible="{Binding EthernetIpAddressHasWarning}" Text="âš  This IP Address does not appear to be valid" Foreground="Red"/>
					<!--<StackPanel Orientation="Horizontal">
						<TextBlock VerticalAlignment="Center" Text="Enable WiFi:"/>
						<CheckBox IsChecked="{Binding WifiIsEnabled}" Margin="10,0,0,0" MinWidth="115"></CheckBox>
					</StackPanel>-->
					<StackPanel Spacing="12" IsVisible="{Binding WifiIsEnabled}">
						<Grid Background="#EEEEEE">
							<DockPanel>
								<TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="WiFi IP Address:" MinWidth="140"/>
								<StackPanel>
									<CheckBox Margin="20,0" Content="Auto (DHCP)" IsChecked="{Binding WifiIsDhcp}"/>
									<TextBox IsVisible="{Binding !WifiIsDhcp}" Text="{Binding WifiIpAddress}" Watermark="WiFi unchanged" Margin="10,0,0,0" MinWidth="150" ToolTip.Tip="Here you can enter a static IP Address for the WiFi interface on the selected server. You can use CIDR notation to specify subnet, and you can configure multiple addresses by separating them with a space."></TextBox>
								</StackPanel>
							</DockPanel>
						</Grid>
						<TextBlock Margin="0,-12,0,0" Background="#EEEEEE" IsVisible="{Binding WifiIpAddressHasWarning}" Text="âš  This IP Address does not appear to be valid" Foreground="Red"/>
						<DockPanel>
							<TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="WiFi Password:" MinWidth="120"/>
							<TextBox Text="{Binding WifiPassword}" Watermark="No password" PasswordChar="*" Margin="10,0,0,0" MinWidth="170" ToolTip.Tip="The password for the WiFi network. Leave blank if the network is open and there is no password."></TextBox>
						</DockPanel>
						<DockPanel Background="#EEEEEE">
							<TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="WiFi SSID:" MinWidth="120"/>
							<TextBox Text="{Binding WifiSsid}" Margin="10,0,0,0" Watermark="WiFi unchanged" MinWidth="170" ToolTip.Tip="Here you can enter the name of the wireless network to connect to. You can also click the 'Scan nearby WiFi networks' button below to see what networks are available at the moment, and click one of them to fill this field in."></TextBox>
						</DockPanel>
						<Button Content="Scan nearby WiFi networks" IsVisible="{Binding HasSelectedServer}" Command="{Binding ScanWifiNetworksCommand}"/>
					</StackPanel>
				</StackPanel>
				<ScrollViewer Grid.Row="1" MinHeight="80" Margin="0,10,0,0" IsVisible="{Binding HasSelectedServer}">
					<ListBox ItemsSource="{Binding WifiNetworks}" SelectionMode="Single" SelectedIndex="{Binding SelectedWifiNetworkIndex}">
						<ListBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding}" Margin="0,0,0,0"></TextBlock>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>
				</ScrollViewer>
			</Grid>
		</Border>

		<Grid Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2">
			<StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Center" Spacing="20">
				
				<Button Click="ExportConfigButton_Click" Background="Tan" Content=" Export config to file " ToolTip.Tip="Exports the configuration above to a settings.ini file. This file can be used to apply settings to an offline Helios OpenIDN device. To do this: Place the file settings.ini on a USB drive. Plug the USB drive into the device. Plug the power cable out and back in to reboot the device. The device should power up with the new settings. NB: The startup process could take up to a full minute."></Button>
				<Button Command="{Binding SaveAndApplyConfigCommand}"  IsVisible="{Binding HasSelectedServer}" Background="Orange" FontWeight="SemiBold" Content=" Save/upload config " ToolTip.Tip="Sends the configuration above to the selected server over the network. Once this is complete, you need to restart the device for the settings to take effect."></Button>
				<Button Command="{Binding RestartServerCommand}" IsVisible="{Binding HasSelectedServer}" Background="LightBlue"  Content=" Restart server " ToolTip.Tip="Reboots the server. This will apply the new configuration if one was uploaded. "></Button>
			
			</StackPanel>
		</Grid>
		
	</Grid>

</UserControl>
